list.files("/scratch/hswan/thesis_isomiR_count_denoising")
library(ShollBayes)
library(devtools)
devtools::install_git("https://github.com/vonkaenelerik/ShollBayes.git")
install.packages('rjags')
library(LaplacesDemon)
library(tidyverse)
library(rjags)
setwd("/gpfs/fs2/scratch/hswan/thesis_isomiR_count_denoising")
library(tidyverse)
library(Biostrings)
source("/scratch/hswan/thesis_isomiR_count_denoising/Code/denoise_isomiR_counts_update_partitions_at_end.R")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(Biostrings)
source("/scratch/hswan/thesis_isomiR_count_denoising/Code/denoise_isomiR_counts_update_partitions_at_end.R")
BiocManager::install("DESeq2")
library(tidyverse)
library(Biostrings)
source("/scratch/hswan/thesis_isomiR_count_denoising/Code/denoise_isomiR_counts_update_partitions_at_end.R")
getwd()
list.files("./data")
list.files("./data/simulated_data")
list.files("./data/simulated_data/multi_partition_isomiRs")
getwd()
simulated_isomiRs = list.files("./data/simulated_data/multi_partition_isomiRs")
file_path = "./data/simulated_data/multi_partition_isomiRs"
#load a random datalist:
data_list = readRDS(paste0(file_pat, simulated_isomiRs[17], collapse=""))
#load a random datalist:
data_list = readRDS(paste0(file_path, simulated_isomiRs[17], collapse=""))
file_path = "./data/simulated_data/multi_partition_isomiRs/"
#load a random datalist:
data_list = readRDS(paste0(file_path, simulated_isomiRs[17], collapse=""))
#pick out first dataset:
rowdata = data_list[[1]]$sim_rowdata
countdata = data_list[[1]]$sim_counts
cat("Rowdata dimensions:", dim(rowdata), "\n")
cat("countdata dimensions:", length(countdata), "\n")
head(rowdata)
head(countdata)
table(countdata)
source("~/.active-rstudio-document", echo=TRUE)
cat("miRNA:", miRNA, "\n")
miRNA = strsplit(simulated_isomiRs[[17]], "_25_simulated")[[1]][1]
cat("miRNA:", miRNA, "\n")
transition_probs = readRDS("/scratch/hswan/thesis_isomiR_count_denoising/initial_transition_probs.Rds")
tst_denoising = denoise_isomiR_counts(rowdata, countdata, transition_probs, miRNA, 0.05, 10, "BH")
BiocManager::install("pwalign")
tst_denoising = denoise_isomiR_counts(rowdata, countdata, transition_probs, miRNA, 0.05, 10, "BH")
warnings()
